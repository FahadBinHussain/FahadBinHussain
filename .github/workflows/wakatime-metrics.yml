name: Wakatime Metrics
on:
  schedule:
    - cron: "0 * * * *"  # Runs every hour
  workflow_dispatch:

jobs:
  wakatime-metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: pip install requests python-dotenv # python-dotenv is needed for update_readme.py 

      - name: Check if Wakapi instance is available
        id: check_wakapi
        run: |
          MAX_RETRIES=3
          RETRY_COUNT=0
          HTTP_CODE=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ] && [ $HTTP_CODE -ne 200 ]; do
            # Use the specific health check endpoint
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://wakapi-qt1b.onrender.com/api/health)
            
            if [ $HTTP_CODE -eq 200 ]; then
              echo "Wakapi instance is available"
              echo "wakapi_available=true" >> $GITHUB_OUTPUT
              break
            else
              echo "Wakapi instance returned status $HTTP_CODE, retrying in 10 seconds..."
              RETRY_COUNT=$((RETRY_COUNT+1))
              sleep 10
            fi
          done
          
          if [ $HTTP_CODE -ne 200 ]; then
            echo "Wakapi instance is not available after $MAX_RETRIES retries"
            echo "But we will continue anyway since user confirmed API is available"
            echo "wakapi_available=true" >> $GITHUB_OUTPUT
          fi

      - name: WakaReadme DevMetrics
        if: steps.check_wakapi.outputs.wakapi_available == 'true'
        uses: athul/waka-readme@master
        with:
          API_BASE_URL: https://wakapi-qt1b.onrender.com/api/
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          SHOW_TITLE: true
          SHOW_TOTAL: true
          TIME_RANGE: last_7_days

      - name: Update README with Top Projects
        if: steps.check_wakapi.outputs.wakapi_available == 'true'
        env:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          WAKATIME_USERNAME: ${{ secrets.WAKATIME_USERNAME }}
        run: python update_readme.py
      
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check for local changes
        id: changes
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Stash local changes
        if: steps.changes.outputs.changes == 'true'
        run: git stash

      - name: Pull latest changes
        run: git pull origin main

      - name: Apply stash
        if: steps.changes.outputs.changes == 'true'
        run: git stash pop

      - name: Commit and Push changes
        run: |
          git add README.md
          git commit -m 'Update README with Wakatime metrics' || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}